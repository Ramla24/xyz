# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dlas_S6tu3oct66of4mvwXYstbj5-NXR
"""

import streamlit as st
from transformers import T5ForConditionalGeneration, T5Tokenizer

# Load model and tokenizer
model = T5ForConditionalGeneration.from_pretrained('t5-small')
tokenizer = T5Tokenizer.from_pretrained('t5-small')

def summarize_text(text, max_length=150):
    inputs = tokenizer.encode("summarize: " + text, return_tensors="pt", max_length=1024, truncation=True)
    summary_ids = model.generate(inputs, max_length=max_length, min_length=30, length_penalty=2.0, num_beams=4, early_stopping=True)
    summary = tokenizer.decode(summary_ids[0], skip_special_tokens=True)
    return summary

def chunk_text(text, chunk_size=1024):
    words = text.split()
    for i in range(0, len(words), chunk_size):
        yield ' '.join(words[i:i + chunk_size])

def summarize_large_text(text):
    summaries = []
    for chunk in chunk_text(text):
        summary = summarize_text(chunk)
        summaries.append(summary)
    return " ".join(summaries)


# Streamlit interface
st.title("Text Summarization App")

text_input = st.text_area("Enter the text you want to summarize", height=300)

if st.button("Generate Summary"):
    if text_input:
        with st.spinner("Generating summary..."):
            summary = summarize_large_text(text_input)
            st.subheader("Summary")
            st.write(summary)
    else:
        st.warning("Please input some text to summarize.")

